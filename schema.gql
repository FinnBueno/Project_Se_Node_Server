# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""A user account that allows someone to log in"""
type Account {
  email: String!
  firstname: String!
  id: ID!
  lastname: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""The deceased model"""
type Deceased {
  address: String
  amountOfChildren: Float
  amountOfMinors: Float
  bsn: String
  callname: String
  dateOfBirth: DateTime
  firstname: String
  gender: String
  girlname: String
  lastname: String
  maritalStatus: String
  postal: String
  religion: String
  title: String
  town: String
}

"""The funeral model"""
type Funeral {
  account: Account
  deceased: Deceased
  id: ID!
  lastCreationStep: Float
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createFuneral: Funeral!
  login(input: LoginInput!): String
  logout: Boolean!
  register(input: RegisterInput!): Account
  savePersonalia(funeralId: String!, personalia: PersistDeceasedInput!): Deceased!
}

input PersistDeceasedInput {
  address: String
  amountOfChildren: Float
  amountOfMinors: Float
  bsn: String
  callname: String
  dateOfBirth: DateTime
  firstname: String
  gender: String
  girlname: String
  lastname: String
  maritalStatus: String
  postal: String
  religion: String
  title: String
  town: String
}

type Query {
  funeral(id: String): Funeral
  funerals: [Funeral!]!
  loggedIn: Account!
  personalia(id: String!): Deceased
}

input RegisterInput {
  email: String!
  firstname: String!
  lastname: String!
  password: String!
}
