# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""A user account that allows someone to log in"""
type Account {
  email: String!
  firstname: String!
  id: ID!
  lastname: String!
}

"""Circumstances of death"""
type Circumstances {
  address: String
  cause: String
  date: DateTime
  postal: String
  reasonForProcrastination: String
  time: String
  town: String
}

"""The client model"""
type Client {
  address: String
  callname: String
  dateOfBirth: DateTime
  emailAddress: String
  firstLetters: String
  firstname: String
  gender: String
  girlname: String
  lastname: String
  phoneNumber: String
  postal: String
  relation: String
  town: String
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""The deceased model"""
type Deceased {
  address: String
  amountOfChildren: Float
  amountOfMinors: Float
  bsn: String
  callname: String
  dateOfBirth: DateTime
  firstname: String
  gender: String
  girlname: String
  lastname: String
  maritalStatus: String
  postal: String
  religion: String
  title: String
  town: String
}

"""The funeral model"""
type Funeral {
  account: Account
  circumstances: Circumstances
  client: Client
  deceased: Deceased
  id: ID!
  insurances: [Insurance!]
  lastCreationStep: Float
  transmission: Transmission
}

"""Insurance object"""
type Insurance {
  company: String
  policynumber: String
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createFuneral: Funeral!
  login(input: LoginInput!): String
  logout: Boolean!
  register(input: RegisterInput!): Account
  saveCircumstances(circumstances: PersistCircumstancesInput!, funeralId: String!): Circumstances!
  saveClient(client: PersistClientInput!, funeralId: String!): Client!
  saveInsurances(funeralId: String!, insurances: [PersistInsuranceInput!]!): Boolean!
  savePersonalia(funeralId: String!, personalia: PersistDeceasedInput!): Deceased!
  saveTransmission(funeralId: String!, transmission: PersistTransmissionInput!): Transmission!
}

"""Circumstances of death"""
input PersistCircumstancesInput {
  address: String
  cause: String
  date: DateTime
  postal: String
  reasonForProcrastination: String
  time: String
  town: String
}

input PersistClientInput {
  address: String
  callname: String
  dateOfBirth: DateTime
  emailAddress: String
  firstLetters: String
  firstname: String
  gender: String
  girlname: String
  lastname: String
  phoneNumber: String
  postal: String
  relation: String
  town: String
}

input PersistDeceasedInput {
  address: String
  amountOfChildren: Float
  amountOfMinors: Float
  bsn: String
  callname: String
  dateOfBirth: DateTime
  firstname: String
  gender: String
  girlname: String
  lastname: String
  maritalStatus: String
  postal: String
  religion: String
  title: String
  town: String
}

input PersistTransmissionInput {
  by: String
  date: DateTime
  from: String
  fromAddress: String
  fromPlace: String
  to: String
  toAddress: String
  toPlace: String
}

"""Insurance object"""
input PersistInsuranceInput {
  company: String
  policynumber: String
}

type Query {
  circumstances(id: String!): Circumstances
  client(id: String!): Client
  funeral(id: String): Funeral
  funerals: [Funeral!]!
  insurances(id: String!): [Insurance!]
  loggedIn: Account!
  personalia(id: String!): Deceased
  transmission(id: String!): Transmission
}

input RegisterInput {
  email: String!
  firstname: String!
  lastname: String!
  password: String!
}

"""The transmission model"""
type Transmission {
  by: String
  date: DateTime
  from: String
  fromAddress: String
  fromPlace: String
  to: String
  toAddress: String
  toPlace: String
}
